name: CI

on:
# Run on creating or updating a PR
  pull_request:
    types: [opened, synchronize, reopened]

# And pushing to the trunk or fix branches
  push:
    branches:
      - trunk
      - 'fix*'

# And pushing new version tags e.g. 2024.103
    tags:
      - '20[0-9]{2}\.[0-9]{3}'

jobs:

  unit-test:
#   Run on ubuntu, mac and windows for python 3.8 (in AMS python stack) up to 3.11
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Move Repo To SCM Namespace and Set PYTHONPATH
        if: runner.os != 'Windows'
        run: |
          mkdir -p scm/plams
          find . -mindepth 1 -maxdepth 1 -not -name 'scm' -not -name '.*' -exec mv {} scm/plams/ \;
          echo "PYTHONPATH=$(pwd):$PYTHONPATH" >> $GITHUB_ENV

      - name: Move Repo To SCM Namespace and Set PYTHONPATH (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -Path scm\plams -ItemType Directory -Force
          
          Get-ChildItem -Directory | Where-Object { $_.Name -ne 'scm' } | ForEach-Object {
            Move-Item -Path $_.FullName -Destination scm\plams
          }

          Get-ChildItem -File | ForEach-Object {
            Move-Item -Path $_.FullName -Destination scm\plams
          }

          echo "PYTHONPATH=$(pwd);$env:PYTHONPATH" >> $env:GITHUB_ENV

      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        working-directory: scm/plams
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          pip install coverage

      - name: Run Unit Tests
        working-directory: scm/plams
        run: |
          pwd
          coverage run -m pytest unit_tests
#     ToDo: Bump the fail-under threshold over time until acceptable level is reached
      - name: Evaluate Coverage
        working-directory: scm/plams
        run: coverage report --omit="unit_tests/*" -i --fail-under=35


  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
          pip install "black[jupyter]"
          pip install flake8
          pip install mypy==1.12.0 

      - name: Run Black
        run: |
          black --check -t py38 -l 120 .

      - name: Run Flake8
        run: |
          flake8 --color never --count --config .flake8 .

      - name: Run MyPy
        run: |
           mypy
          

  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Move Repo To SCM Namespace and Set PYTHONPATH
        run: |
          mkdir -p scm/plams
          find . -mindepth 1 -maxdepth 1 -not -name 'scm' -not -name '.*' -exec mv {} scm/plams/ \;
          echo "PYTHONPATH=$(pwd):$PYTHONPATH" >> $GITHUB_ENV

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        working-directory: scm/plams
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          cd doc
          pip install -r requirements.txt

#     Turn on the -W flag when building once warnings to external links have been resolved
#     ToDo: add a warning allowlist to check the warnings logged via -w
      - name: Build Sphinx Docs
        working-directory: scm/plams/doc
        run: |
          python build_plams_doc
